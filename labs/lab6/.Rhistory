abline(v= 5.75)
abline(v=15.25)
text(y = 59,x=5.75,"25%
plot()
plot(menAge)
plot(menAge)
clear()
abline(v= 5.75)
abline(v=15.25)
text(y = 59,x=5.75,"25%",srt=2)
= "Men Age", xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
text(y = 59,x=5.75,"25%",srt=2)
plot(sort(menAge), ylab = "Men Age", xlab = "Individual", xlim = c(1,20) )
), ylab = "Men Age", xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
text(y = 59,x=5.75,"25%",srt=2)
plot(sort(menAge), ylab = "Men Age", xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
text(y = 59,x=5.75,"25%",srt=2)
undo()
text(y = 59,x=6,"25%",srt=2)
plot(sort(menAge), ylab = "Men Age", xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
text(y = 59,x=6,"25%",srt=2)
text(y = 59,x=9,"25%",srt=2)
text(y = 59,x=7,"25%",srt=2)
text(y = 59,x=6.5,"25%",srt=2)
plot(sort(menAge), ylab = "Men Age", xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
text(y = 59,x=6.5,"25%",srt=2)
text(y = 59,x=6.5,"25%",srt=20)
text(y = 59,x=6.5,"25%")
xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
text(y = 59,x=6.5,"25%")
plot(sort(menAge), ylab = "Men Age", xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
text(y = 59,x=6.5,"25%")
text(y = 59,x=6.5,"75%")
text(y = 59,x=15.75,"75%")
text(y = 59,x=16,"75%")
plot(sort(menAge), ylab = "Men Age", xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
text(y = 59,x=6.5,"25%")
text(y = 59,x=16,"75%")
#Plot Women Age
plot(sort(womenAge), ylab = "Women Age", xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
text(y = 59,x=6.5,"25%")
text(y = 59,x=16,"75%")
line(15.25)
#Plot Women Age
plot(sort(womenAge), ylab = "Women Age", xlab = "Individual", xlim = c(1,20), type="l" )
#Plot Women Age
plot(sort(womenAge), ylab = "Women Age", xlab = "Individual", xlim = c(1,20) )
#Plot Women Age
plot(sort(womenAge), ylab = "Women Age", xlab = "Individual", xlim = c(1,20), type = "h" )
#Plot Women Age
plot(sort(womenAge), ylab = "Women Age", xlab = "Individual", xlim = c(1,20) )
meanWomen = mean(menAge)
meanWomen = mean(womenAge)
meanMen = mean(menAge)
text(y = 59,x=40,"75%")
#Plot Men Age
plot(sort(menAge), ylab = "Men Age", xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
abline(v=meanMen)
text(y = 59,x=6.5,"25%")
text(y = 59,x=16,"75%")
text(y = 59,x=40,"75%")
abline(h=meanMen)
text(y = 42,x=2,"Average%")
text(y = 42,x=2,"Mean line")
plot(sort(menAge), ylab = "Men Age", xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
abline(h=meanMen)
text(y = 59,x=6.5,"25%")
text(y = 59,x=16,"75%")
text(y = 42,x=2,"Mean line")
#Plot Women Age
line(y=meanMen)
lines.default(y=40)
lines.default(y=40, x = NULL)
abline(h=meanMen)
#Plot Women Age
plot(sort(womenAgge), ylab = "Women Age", xlab = "Individual", xlim = c(1,20) )
womenA
womenA
#Plot Women Age
plot(sort(womenAge), ylab = "Women Age", xlab = "Individual", xlim = c(1,20) )
abline(h=meanWomenen)
abline(v= 5.75)
abline(v=15.25)
abline(h=meanWomenen)
text(y = 59,x=6.5,"25%")
text(y = 59,x=16,"75%")
abline(h=meanWomenen)
abline(h=meanMen)
plot(sort(menAge), ylab = "Men Age", xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
abline(h=meanMen)
text(y = 59,x=6.5,"25%")
text(y = 59,x=16,"75%")
text(y = 42,x=2,"Mean line")
#Plot Women Age
plot(sort(womenAge), ylab = "Women Age", xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
abline(h=meanWomen)
text(y = 59,x=6.5,"25%")
text(y = 59,x=16,"75%")
text(y = 44,x=2,"Mean line")
abline(h=meanWomen,lty = 2))
abline(h=meanWomen,lty = 2)
#Plot Women Age
plot(sort(womenAge), ylab = "Women Age", xlab = "Individual", xlim = c(1,20) )
abline(h=meanWomen,lty = 2)
plot(sort(menAge), ylab = "Men Age", xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
abline(h=meanMen)
text(y = 59,x=6.5,"25%")
text(y = 59,x=16,"75%")
text(y = 42,x=2,"Mean line")
text(y = 41.7,x=2,"Mean line")
text(y = 41,x=2,"Mean line")
#Plot Men Age
plot(sort(menAge), ylab = "Men Age", xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
abline(h=meanMen,lty=2)
text(y = 59,x=6.5,"25%")
text(y = 59,x=16,"75%")
text(y = 41,x=2,"Mean line")
#Plot Women Age
plot(sort(womenAge), ylab = "Women Age", xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
abline(h=meanWomen,lty = 2)
text(y = 59,x=6.5,"25%")
text(y = 59,x=16,"75%")
text(y = 44,x=2,"Mean line")
plot(sort(menAge), ylab = "Men Age", xlab = "Individual", xlim = c(1,20) )
abline(v= 5.75)
abline(v=15.25)
abline(h=meanMen,lty=2)
text(y = 59,x=6.5,"25%")
text(y = 59,x=16,"75%")
text(y = 41,x=2,"Mean line")
#a
noPlaySports = 1-probPlaySports
################################################################################
#PROBLEM 6
probPlaySports = .45
probPlayInstrument = .34
probAttendCollege = .69
#a
noPlaySports = 1-probPlaySports
noPlaySports
#b
playsStuff = probPlaySports*probPlayInstrument
playsStuff
#c
collegeAthlete = probPlaySports*probAttendCollege
collegeAthlete
#PS 2 - Andrew Celli
set.seed(12345)
plot(density(rnorm(mean = 5.2))
rnorm(mean = 5.2)
q2d = rnorm(n=36, mean = 5.2)
plot(density(rnorm(mean = 5.2))
plot(density(q2d))
q2d = rnorm(n=36, mean = 5.2)
plot(density(q2d))
?normal
?norm
?rnorm
qnorm
qnorm(q2d)
qnorm(q2d,lower.tail = F)
qnorm(.5, q2d,lower.tail = F)
plot(density(q2d))
qnorm(.5, q2d,lower.tail = F)
q2dq = qnorm(.5, q2d,lower.tail = F)
q2dq = qnorm(.1, q2d,lower.tail = F)
line(density(q2dq))
?rnorm
q2dq = qnorm(.1, q2d,lower.tail = F)
line(density(q2dq))
q2d = rnorm(n=36, mean = 5.2)
plot(density(q2d))
q2d = rnorm(n=36, mean = 5.2)
q2dq = qnorm(.1, q2d,lower.tail = F)x
#PS 2 - Andrew Celli
set.seed(1234)
q2d = rnorm(n=36, mean = 5.2)
plot(density(q2d))
?rnormx
#PS 2 - Andrew Celli
set.seed(12345)
q2d = rnorm(n=36, mean = 5.2)
plot(density(q2d))
q2dq = qnorm(.1, q2d,lower.tail = F)
plot(density(q2dq))
plot(density(q2d))
plot(density(q2dq))
line(density(q2dq))
plot(density(q2d))
plot(density(q2d))
line(density(q2dq))
plot(line(density(q2dq)))
#PS 2 - Andrew Celli
#Problem 3
read(gss)
?gss
?GSS
help(Normal)
#PS 2 - Andrew Celli
#Problem 4
set.seed(12345)
#PS 2 - Andrew Celli
#Problem 4
set.seed(12345)
help(Normal)
rnorm(mean = 50, sd = 6)
a = rnorm(100000, mean = 50, sd = 6)
a = rnorm(1000, mean = 50, sd = 6)
plot(density(a))
help(normal)
help(normal)
help(norm)
?qnorm
dnorm(1, mean = 50, sd = 6, lower.tail = FALSE)
dnorm(1, mean = 50, sd = 6, lower.tail = T)
dnorm(1, mean = 50, sd = 6)
dnorm(-1, mean = 50, sd = 6)
dnorm(50, mean = 50, sd = 6)
plot(density(a))
dnorm(x<=50, mean = 50, sd = 6)
dnorm(<=50, mean = 50, sd = 6)
?qnorm
pnorm(x<=50, mean = 50, sd = 6)
pnorm(<=50, mean = 50, sd = 6)
pnorm(50, mean = 50, sd = 6)
pnorm(050, mean = 50, sd = 6)
pnorm(0500, mean = 50, sd = 6)
pnorm(57.75, mean = 50, sd = 6)
pnorm(50.45, mean = 50, sd = 6)
pnorm(50.45, mean = 50, sd = 6)
pnorm(52.4, mean = 50, sd = 6) - pnorm(59.4, mean = 50, sd = 6)
pnorm(59.4, mean = 50, sd = 6) - pnorm(52.4, mean = 50, sd = 6)
a = rnorm(1000, mean = 50, sd = 6)
plot(density(a))
a = rnorm(10000, mean = 50, sd = 6)
plot(density(a))
a = rnorm(10000000, mean = 50, sd = 6)
plot(density(a))
a = rnorm(1000000000000, mean = 50, sd = 6)
#Problem 5
salaries <- rnorm(n=10000,mean=40000,sd=15000)
plot(density(salaries))
#PS 2 - Andrew Celli
#Problem 4
set.seed(12345)
a = rnorm(100000, mean = 50, sd = 6)
plot(density(a))
pnorm(57.75, mean = 50, sd = 6) #a
pnorm(50.45, mean = 50, sd = 6) #b
pnorm(59.4, mean = 50, sd = 6) - pnorm(52.4, mean = 50, sd = 6) #c
#Problem 5
set.seed(12345)
salaries <- rnorm(n=10000,mean=40000,sd=15000)
plot(density(salaries))
plot(density(salaries), main = "d")
plot(density(salaries), main = "Salaries Distribution")
ab = rnorm(100000, mean = 50, sd = 6)
#Problem 6
rnorm(mean = 0, sd = .04^.5)
#Problem 6
a = rnorm(100000, mean = 0, sd = .04^.5)
b = rnorm(100000, mean = 0, sd = 3^.5)
= rnorm(100000, mean = 0, sd = .04^.5)
b = rnorm(100000, mean = 0, sd = 3^.5)
c = rnorm(100000, mean = 3, sd = 3^.5)
d
#Problem 6
a = rnorm(100000, mean = 0, sd = .04^.5)
b = rnorm(100000, mean = 0, sd = 3^.5)
c = rnorm(100000, mean = 3, sd = 3^.5)
d = rnorm(100000, mean = 3, sd = .4^.5)
#Problem 6
a = density(rnorm(100000, mean = 0, sd = .04^.5))
View(a)
View(a)
f = density(rnorm(100000, mean = -2, sd = .4^.25))
a = density(rnorm(100000, mean = 0, sd = .04^.5))
b = density(rnorm(100000, mean = 0, sd = 3^.5))
c = density(rnorm(100000, mean = 3, sd = 3^.5))
d = density(rnorm(100000, mean = 3, sd = .4^.5))
e = density(rnorm(100000, mean = -2, sd = .4^.5))
f = density(rnorm(100000, mean = -2, sd = .4^.25))
plot(a)
plot(b)
line(b)
lines(b)
plot(a)
lines(b)
lines(c)
lines(d)
lines(e)
lines(f)
plot(wt, a)
par(mfrow=c(2,2))
plot(wt, a)
par(mfrow=c(2,2))
plot( a)
par(mfrow=c(2,3))
plot(a)
plot(b)
plot(c)
plot(d)
plot(e)
plot(f)
plot(a, main = "a")
plot(b, main = "b")
plot(c, main = "c")
plot(d, main = "d")
plot(e, main = "e")
plot(f, main = "f")
par(c(2,3))
#a
hist(drugCov$drugsmedia, breaks = 196, main = "New's Coverage of Drug")
drugCov = read.csv("drugCoverage.csv")
#Problem 7
dir()
setwd("Desktop" )
#Problem 7
dir()
(
drugCov = read.csv("drugCoverage.csv")
#a
hist(drugCov$drugsmedia, breaks = 196, main = "New's Coverage of Drug")
drugCov = read.csv("drugCoverage.csv")
#a
hist(drugCov$drugsmedia, breaks = 196, main = "New's Coverage of Drug")
#a
hist(drugCov$drugsmedia, breaks = 196, main = "New's Coverage of Drug")
dir()
setwd("/Documents/GitHub/QPMspring2019/labs")
setwd("~/Documents/GitHub/QPMspring2019/labs")
dir()
social <- read.csv("social.csv")
setwd("~/Documents/GitHub/QPMspring2019/labslab6/")
setwd("~/Documents/GitHub/QPMspring2019/labs/lab6/")
dir()
##
## 1. Difference in means test
##
help(t.test)
social <- read.csv("social.csv")
social
table(social$messages)
table(social$treatment)
table(social$treatment, social$primary2006)
table(social$treatment)#, social$primary2006)
table(social$treatment, social$primary2006)
# Pre-treatment difference in 2004
t.test(primary2004 ~ treatment, data=social,
alternative="two.sided", var.equal=FALSE) # default options
# Post-treatment difference in 2006
t.test(primary2006 ~ treatment, data=social,
alternative="two.sided", var.equal=FALSE) # default options
# One-tailed test
t.test(primary2006 ~ treatment, data=social,
alternative="less")
t.test(primary2006 ~ treatment, data=social,
alternative="greater")
# One-tailed test
t.test(primary2004 ~ treatment, data=social,
alternative="less")
##
## 2. Contingency tables and Chi-squared test
##
help(chisq.test)
# Let's make a fake contingency table for gender and party ID
fake.tab <- matrix(c(762, 327, 468, 484, 239, 677), nrow=2, byrow=TRUE)
dimnames(fake.tab) <- list(Gender=c("Female", "Male"),
Party=c("Democrat", "Independent", "Republican"))
fake.tab <- as.table(fake.tab)
fake.tab
# Chi-squared test
chisq.test(fake.tab)
negative <- read.csv("negative_ads.csv")
negative <- read.csv("negative_ads.csv")
colnames(negative)
negative <- read.csv("negative_ads.csv")
colnames(negative)
View(negative)
t.test(treatment ~ voted02p, data=negative )
t.test(voted02p ~ treatment, data=negative )
install.packages("titanic")
library(titanic)
my.titanic <- titanic_train
View(my.titanic)
#    (1) Make a contingency table of the observed frequencies for the survival
#    of passengers with respect to their class.
#    Hint: use table().
#    (2) Conduct a necessary hypothesis test with the null that survival and
#    passanger class are independent. Interpret the result.
table(my.titanic)
table(my.titanic$Survived & my.titanic$Pclass)
table(my.titanic$Survived & my.titanic$Pclass)
table(my.titanic$Survived , my.titanic$Pclass)
table(my.titanic$Survived[my.titanic] , my.titanic$Pclass)
table(my.titanic$Survived , my.titanic$Pclass)
t.test(my.titanic$Survived , my.titanic$Pclass)
t.test(Survived , Pclass, data = my.titanic$)
t.test(Survived , Pclass, data = my.titanic=)
t.test(Survived , Pclass, data = my.titanic)
my.titanic$
t.test(my.titanic$Survived , my.titanic$Pclass)
t.test(my.titanic$Survived , my.titanic$Pclass)
t.test(Survived , Pclass, data = my.titanic)
t.test(my.titanic$Survived , my.titanic$Pclass)
?t.test
t.test(my.titanic$Survived , my.titanic$Pclass, conf.level = 0.99999)
t.test(my.titanic$Survived , my.titanic$Pclass)
# 4. Some claimed that the "women and children first" evacuation policy
#    helped them escape regardless of their class. Using only the women in
#    the sample, make a contingency table to test this assertion. Do you think
#    this evacuation policy worked?
t.test(my.titanic$Survived[my.titanic$Sex =="female"] , my.titanic$Survived)
# 4. Some claimed that the "women and children first" evacuation policy
#    helped them escape regardless of their class. Using only the women in
#    the sample, make a contingency table to test this assertion. Do you think
#    this evacuation policy worked?
table(my.titanic$Survived[my.titanic$Sex =="female"] , my.titanic$Survived)
source('~/Documents/GitHub/QPMspring2019/labs/lab6/lab6.R', echo=TRUE)
# 4. Some claimed that the "women and children first" evacuation policy
#    helped them escape regardless of their class. Using only the women in
#    the sample, make a contingency table to test this assertion. Do you think
#    this evacuation policy worked?
table(my.titanic$Survived[my.titanic$Sex =="female"] , my.titanic$Survived)
# 4. Some claimed that the "women and children first" evacuation policy
#    helped them escape regardless of their class. Using only the women in
#    the sample, make a contingency table to test this assertion. Do you think
#    this evacuation policy worked?
table(my.titanic$Survived[my.titanic$Sex =="female"] , my.titanic$Survived)
# 4. Some claimed that the "women and children first" evacuation policy
#    helped them escape regardless of their class. Using only the women in
#    the sample, make a contingency table to test this assertion. Do you think
#    this evacuation policy worked?
table(my.titanic$Survived , my.titanic$Gender)
# 4. Some claimed that the "women and children first" evacuation policy
#    helped them escape regardless of their class. Using only the women in
#    the sample, make a contingency table to test this assertion. Do you think
#    this evacuation policy worked?
table(my.titanic$Survived, my.titanic$Gender)
# 4. Some claimed that the "women and children first" evacuation policy
#    helped them escape regardless of their class. Using only the women in
#    the sample, make a contingency table to test this assertion. Do you think
#    this evacuation policy worked?
table(my.titanic$Survived, my.titanic$Sex)
t.test(my.titanic$Survived, my.titanic$Sex)
# 4. Some claimed that the "women and children first" evacuation policy
#    helped them escape regardless of their class. Using only the women in
#    the sample, make a contingency table to test this assertion. Do you think
#    this evacuation policy worked?
table(my.titanic$Survived, my.titanic$Sex)
t.test(my.titanic$Survived, my.titanic$Survived[my.titanic$Survived=="women"])
t.test(my.titanic$Survived, my.titanic$Survived[my.titanic$Survived=="Women"])
t.test(my.titanic$Survived, my.titanic$Sex)
t.test(my.titanic$Survived, my.titanic$Survived[my.titanic$Sex=="Women"])
t.test(my.titanic$Survived, my.titanic$Survived[my.titanic$Sex=="Women"])
# 4. Some claimed that the "women and children first" evacuation policy
#    helped them escape regardless of their class. Using only the women in
#    the sample, make a contingency table to test this assertion. Do you think
#    this evacuation policy worked?
table(my.titanic$Survived, my.titanic$Sex)
t.test(my.titanic$Survived, my.titanic$Survived[my.titanic$Sex=="Women"])
qnorm(50.45, mean = 50, sd = 6) #b
qnorm(50.45, mean = 50, sd = 6) #b
#PS 2 - Andrew Celli
#Problem 4
set.seed(12345)
ab = rnorm(100000, mean = 50, sd = 6)
plot(density(a))
pnorm(57.75, mean = 50, sd = 6) #a
qnorm(50.45, mean = 50, sd = 6) #b
pnorm(50.45, mean = 50, sd = 6) #b
1-pnorm(50.45, mean = 50, sd = 6) #b
#a
hist(drugCov$drugsmedia, breaks = 196, main = "New's Coverage of Drug")
setwd("Desktop" )
drugCov = read.csv("drugCoverage.csv")
#Problem 7
dir()
setwd("Desktop" )
drugCov = read.csv("drugCoverage.csv")
