############################################
## File: Lab4.R                           ##
## Day 4: Sampling Distribution           ##
############################################
getwd()
help("distribution")
help("normal distribution")
vec1 <- rnorm(100000, mean=0, sd=1)  # 100000 random numbers with mean=0 and sd=1
vec1
plot(density(vec1),
main="Distribution of vec1",
xlab="")
## 1. To generate random numbers from a normal distribution,
##    use rnorm(n=, mean=, sd=)
set.seed(3)
#### Goals
#### a) Working with pnorm and qnorm
#### b) Practical example of a sampling distribution
?density()
density(vec1),
main="Distribution of vec1",
xlab="")
## 1. To generate random numbers from a normal distribution,
##    use rnorm(n=, mean=, sd=)
set.seed(333)#so that can get same random numbers every time
vec1 <- rnorm(100000, mean=0, sd=1)  # 100000 random numbers with mean=0 and sd=1
vec1
density(vec1),
main="Distribution of vec1",
xlab="")
## 1. To generate random numbers from a normal distribution,
##    use rnorm(n=, mean=, sd=)
set.seed(333)#so that can get same random numbers every time
vec1 <- rnorm(100000, mean=0, sd=1)  # 100000 random numbers with mean=0 and sd=1
vec1
plot(density(vec1),
main="Distribution of vec1",
xlab="")
vec2 <- rnorm(5000, mean=50, sd=6)   # 5000 random numbers with mean=50 and sd=6
vec3 <- rnorm(5000, mean=35, sd=10)  # 5000 random numbers with mean=35 and sd=10
plot(density(vec2),
main="Distribution of vec2 and vec3",
xlab="",
col="red",
xlim=c(0,100))
vec2 <- rnorm(5000000, mean=50, sd=6)   # 5000 random numbers with mean=50 and sd=6
plot(density(vec2),
main="Distribution of vec2 and vec3",
xlab="",
col="red",
xlim=c(0,100))
vec2 <- rnorm(500), mean=50, sd=6)   # 5000 random numbers with mean=50 and sd=6
vec2 <- rnorm(5000), mean=50, sd=6)   # 5000 random numbers with mean=50 and sd=6
vec1 <- rnorm(100000, mean=0, sd=1)  # 100000 random numbers with mean=0 and sd=1
clear()
## 1. To generate random numbers from a normal distribution,
##    use rnorm(n=, mean=, sd=)
set.seed(333)#so that can get same random numbers every time
## 1. To generate random numbers from a normal distribution,
##    use rnorm(n=, mean=, sd=)
set.seed(333)#so that can get same random numbers every time
vec1 <- rnorm(100000, mean=0, sd=1)  # 100000 random numbers with mean=0 and sd=1
vec1
plot(density(vec1),
main="Distribution of vec1",
xlab="")
vec2 <- rnorm(5000, mean=50, sd=6)   # 5000 random numbers with mean=50 and sd=6
vec3 <- rnorm(5000, mean=35, sd=10)  # 5000 random numbers with mean=35 and sd=10
plot(density(vec2),
main="Distribution of vec2 and vec3",
xlab="",
col="red", add = 1,
xlim=c(0,100))
plot(density(vec2),
main="Distribution of vec2 and vec3",
xlab="",
col="red", add = 1,
xlim=c(0,100))
vec2 <- rnorm(5000, mean=50, sd=6)   # 5000 random numbers with mean=50 and sd=6
plot(density(vec1),
main="Distribution of vec1",
xlab="")
plot(density(vec2),
main="Distribution of vec2 and vec3",
xlab="",
col="red", add = 1,
xlim=c(0,100))
## 1. To generate random numbers from a normal distribution,
##    use rnorm(n=, mean=, sd=)
set.seed(333)#so that can get same random numbers every time
vec1 <- rnorm(100000, mean=0, sd=1)  # 100000 random numbers with mean=0 and sd=1
vec1
plot(density(vec1),
main="Distribution of vec1",
xlab="")
vec1 <- rnorm(100000, mean=09, sd=1)  # 100000 random numbers with mean=0 and sd=1
plot(density(vec1),
main="Distribution of vec1",
add,
xlab="")
plot(density(vec1),
main="Distribution of vec1",
xlab="")
# How to plot a normal curve using dnorm()
x.range <- seq(-4, 4, by=0.0001)                       # specify the range of the x-axis
plot(x.range, dnorm(x=x.range, mean=0, sd=1),
type="l",                                         # choose type=line
main="Normal Distribution with mean=0 and sd=1",
ylab="density",
lwd=2,
xaxt="n")
plot(x.range, dnorm(x=x.range, mean=0, sd=1),
type="",                                         # choose type=line
main="Normal Distribution with mean=0 and sd=1",
ylab="density",
lwd=2,
xaxt="n")
plot(x.range, dnorm(x=x.range, mean=0, sd=1),
type="l",                                         # choose type=line
main="Normal Distribution with mean=0 and sd=1",
ylab="density",
lwd=2,
xaxt="n")
plot(x.range, dnorm(x=x.range, mean=0, sd=1),
#  type="l",                                         # choose type=line
main="Normal Distribution with mean=0 and sd=1",
ylab="density",
lwd=2,
xaxt="n")
plot(x.range, dnorm(x=x.range, mean=0, sd=1),
#  type="l",                                         # choose type=line
main="Normal Distribution with mean=0 and sd=1",
ylab="density",
lwd=2,
xaxt="n")
plot(x.range, dnorm(x=x.range, mean=0, sd=1),
#  type="l",                                         # choose type=line
main="Normal Distribution with mean=0 and sd=1",
ylab="density",
lwd=2,
xaxt="n")
plot(x.range, dnorm(x=x.range, mean=0, sd=1),
type="l",                                         # choose type=line
main="Normal Distribution with mean=0 and sd=1",
ylab="density",
lwd=2,
xaxt="n")
plot(x.range, dnorm(x=x.range, mean=0, sd=1),
type="l",                                         # choose type=line
main="Normal Distribution with mean=0 and sd=1",
ylab="density",
lwd=20,
xaxt="n")
plot(x.range, dnorm(x=x.range, mean=0, sd=1),
type="l",                                         # choose type=line
main="Normal Distribution with mean=0 and sd=1",
ylab="density",
lwd=2,#thickness
xaxt="n")
#xaxt="n")
plot(x.range, dnorm(x=x.range, mean=0, sd=1),
plot(x.range, dnorm(x=x.range, mean=0, sd=1),
type="l",                                         # choose type=line
main="Normal Distribution with mean=0 and sd=1",
ylab="density",
lwd=2)#thickness
plot(x.range, dnorm(x=x.range, mean=0, sd=1),
plot(x.range, dnorm(x=x.range, mean=0, sd=1),
type="l",                                         # choose type=line
main="Normal Distribution with mean=0 and sd=1",
ylab="density",
lwd=2) #thickness
plot(x.range, dnorm(x=x.range, mean=0, sd=1),
type="l",                                         # choose type=line
main="Normal Distribution with mean=0 and sd=1",
ylab="density",
lwd=2,#thickness
xaxt="n")
?ylab
pnorm(0, mean=0, sd=1)
pnorm(0, mean=1, sd=1)
pnorm(0, mean=0, sd=1)
# What's the probability of drawing a value between -1.96 and 1.96?
pnorm(1.96, mean=0, sd=1) - pnorm(-1.96, mean=0, sd=1)
qnorm(0.025, mean=0, sd=1)
movies <- read.csv("movies.csv")
View(movies)
# Subset by movie genre
dramas <- movies[movies$genre=="Drama",]
View(dramas)
# Subset by movie genre
dramas <- movies[movies$genre=="Drama"]
# Subset by runtime
long.movies <- movies[movies$runtime >= 120,]
table(long.movies)
table(long.movies$runtime)
lines(density(long.movies$runtime, na.rm=T))
# Subset by runtime
long.movies <- movies[movies$runtime >= 120,]
table(long.movies$runtime)
movies[]
plot(density(movies$runtime, na.rm=T),
lty=2,
main="Distrubtion of Runtime",
xlab="Rutime (minute)",
col="gray50",
ylim=c(0,0.05))
lines(density(long.movies$runtime, na.rm=T))
legend("topright",
legend=c("All Movies", "Long Movies"),
lty=c(2,1),
col=c("gray50", "black"),
bty="n",
cex=0.8)
lines(density(long.movies$runtime, na.rm=T))
plot(density(movies$runtime, na.rm=T),
lty=2,
main="Distrubtion of Runtime",
xlab="Rutime (minute)",
col="gray50",
ylim=c(0,0.05))
# Subset by runtime
long.movies <- movies[movies$runtime >= 120,]
long.movies
View(long.movies)
lines(density(long.movies$runtime, na.rm=T))#added to plot
legend("topright",
legend=c("All Movies", "Long Movies"),
lty=c(2,1),
col=c("gray50", "black"),
bty="n",
cex=0.8)
legend("bottom",
legend=c("All Movies", "Long Movies"),
lty=c(2,1),
col=c("gray50", "black"),
bty="n",
cex=0.8)
plot(density(movies$runtime, na.rm=T),
lty=2,
main="Distrubtion of Runtime",
xlab="Rutime (minute)",
col="gray50",
ylim=c(0,0.05))
lines(density(long.movies$runtime, na.rm=T))#added to plot
# Subset by genre "and" release year
old_comedies <- movies[movies$genre=="Comedy" & movies$thtr_rel_year < 1980,]
View(old_comedies)
# Subset by genre "and" release year
old_comedies <- movies[movies$genre=="Comedy" & movies$thtr_rel_year < 1980,movies]
# Subset by genre "and" release year
old_comedies <- movies[movies$genre=="Comedy" & movies$thtr_rel_year < 1980,]
table(movies$drama)
table(movies$genre)
table(movies$genre=="Drama")
table(movies$genre)
## 2. Read in the Trump Job Approval poll data.
TrumpApproval = read("TrumpApproval.csv")
## 2. Read in the Trump Job Approval poll data.
TrumpApproval = read("TrumpApproval")
## 2. Read in the Trump Job Approval poll data.
TrumpApproval = read.csv("TrumpApproval")
## 2. Read in the Trump Job Approval poll data.
TrumpApproval = read.csv("TrumpApproval.csv")
## 2. Read in the Trump Job Approval poll data.
TrumpApproval = read.csv("TrumpApproval.csv")
View(TrumpApproval)
View(TrumpApproval)
##    Variables are as follows:
##    - Approve = Proportion of the respondents who approve Trump
approve = TrumpApproval$Approve
##    - end_date = Date the survey ended
end_date = TrumpApproval$end_date
##    -
survey_house = TrumpApproval$survey_house
##    - sample_subpopulation = Sample type
sample_subpopulation = TrumpApproval$sample_subpopulation
##    - observations = Number of observations
observations = TrumpApproval$observations
##    - mode = Survey method
mode = TrumpApproval$mode
?plot
## 3. Plot a histogram of the Trump job approval rates.
hist(approve)
## 4. Suppose you only have the "Gallup" poll from "2/19/2017". If we know that
##    the population variance is 0.25, what is your estimate of the sampling
##    distribution?
gallup = TrumpApproval[TrumpApproval$survey_house=="gallup",]
View(gallup)
## 4. Suppose you only have the "Gallup" poll from "2/19/2017". If we know that
##    the population variance is 0.25, what is your estimate of the sampling
##    distribution?
gallup = TrumpApproval[TrumpApproval$survey_house=="Gallup",]
View(gallup)
gallup
plot(gallup)
hist(gallup)
## 4. Suppose you only have the "Gallup" poll from "2/19/2017". If we know that
##    the population variance is 0.25, what is your estimate of the sampling
##    distribution?
gallup = TrumpApproval[TrumpApproval$survey_house=="Gallup"&end_date == "2/19/2017"]
## 4. Suppose you only have the "Gallup" poll from "2/19/2017". If we know that
##    the population variance is 0.25, what is your estimate of the sampling
##    distribution?
gallup = TrumpApproval[TrumpApproval$survey_house=="Gallup"&end_date == "2/19/2017",]
hist(gallup)
## 4. Suppose you only have the "Gallup" poll from "2/19/2017". If we know that
##    the population variance is 0.25, what is your estimate of the sampling
##    distribution?
gallup = TrumpApproval[TrumpApproval$survey_house=="Gallup"&TrumpApproval&end_date == "2/19/2017",]
## 4. Suppose you only have the "Gallup" poll from "2/19/2017". If we know that
##    the population variance is 0.25, what is your estimate of the sampling
##    distribution?
gallup = TrumpApproval[TrumpApproval$survey_house=="Gallup"&TrumpApproval$end_date == "2/19/2017",]
View(gallup)
?pnorm()
View(gallup)
rnorm(gallup$approval, .25,gallup$observations)
rnorm(gallup$observations, gallup$approval, .25 )
rnorm(1500, .42, .25 )
## 4. Suppose you only have the "Gallup" poll from "2/19/2017". If we know that
##    the population variance is 0.25, what is your estimate of the sampling
##    distribution?
set.seed(1)
rnorm(1500, .42, .25^.5)
rnorm(1500, .42, sqrt(.25))
plot(rnorm(1500, .42, sqrt(.25)))
line((rnorm(1500, .42, sqrt(.25)))
plot(density((rnorm(1500, .42, sqrt(.25))))
source('~/Documents/GitHub/QPMspring2019/labs/lab4/Celli-Meyer - Lab 4 Work.R', echo=TRUE)
plot(density((rnorm(1500, .42, sqrt(.25))))
plot(density((rnorm(1500, .42, sqrt(.25)))))
plot(density((rnorm(1500, .42, sqrt(.25)))))
plot(density((rnorm(1500000000, .42, sqrt(.25)))))
plot(density((rnorm(1500000000, .42, sqrt(.25)))))
plot(density((rnorm(1500, .42, sqrt(.25)))))
summary(density((rnorm(1500, .42, sqrt(.25)))))
k = summary(density((rnorm(1500, .42, sqrt(.25)))))
k
k
summary(density((rnorm(1500, .42, sqrt(.25)))))
quantile(density((rnorm(1500, .42, sqrt(.25)))))
quantil(density((rnorm(1500, .42, sqrt(.25)))))
## 5. According to your answer in Q4, what are the 20th and 75th quantiles of
##    the distribution?
quantiles(density((rnorm(1500, .42, sqrt(.25)))), c(.20,70))
## 5. According to your answer in Q4, what are the 20th and 75th quantiles of
##    the distribution?
quantiles(density((rnorm(1500, .42, sqrt(.25)))), c(.20,70), type =1)
quantiles(density(John), c(.20,.7))
plot(quantiles(density(John), c(.20,.7)))
John = rnorm(1500, .42, sqrt(.25))
plot(quantiles(density(John), c(.20,.7)))
View(TrumpApproval)
quantiles(density(John), c(.20,.7))
## 5. According to your answer in Q4, what are the 20th and 75th quantiles of
##    the distribution?
quantiles quantiles(density((rnorm(1500, .42, sqrt(.25)))), c(.20,70), type =1)
# First, you have to run the following line (change the name of the data):
polls$end_date <- as.Date(polls$end_date, "%m/%d/%Y")
quantile(John, c(0.20, 0.75), type = 1)
## 5. According to your answer in Q4, what are the 20th and 75th quantiles of
##    the distribution?
quantiles quantiles(density((rnorm(1500, .42, sqrt(.25)))), c(.20,70), type =1)
quantile(John, c(0.20, 0.75), type = 1)
quantile(John, c(0.20, 0.75), type = 1)
